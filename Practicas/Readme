INSTITUTO TECNOLOGICO DE TIJUANA.
SUBDIRECCIÓN ACADÉMICA.
DEPARTAMENTO DE SISTEMAS COMPUTACIONALES.
SEMESTRE AGOSTO-DICIEMBRE 2019.

Carrera: Ing. Tics
Materia: Datos Masivos
Serie: BDD-1704 TI9A.
Título: Practica 1
Unidad: 1
Nombre del alumno: Luis Armando Santiago Teófilo.
Número de control: 15210344
Nombre del maestro: lorenzo Jose Christian Romero Hernandez.
Introducción

los siguientes 3 ejercicios en el lenguaje de programación scala es un lenguaje de programación multi-paradigma diseñado 
para expresar patrones comunes de programación en forma concisa, elegante y con tipos seguros. Integra sutilmente 
características de lenguajes funcionales y orientados a objetos. La implementación actual corre en la máquina virtual 
de Java y es compatible con las aplicaciones Java existentes , fueron posible desarrollarlos gracias a los conocimientos
obtenidos en las primeras secciones de la clase de especialidad de la carrera de Ing. Tics datos masivos.


Código

// practica 1
//Desarrollar un algoritmo en scala que calcule el área de un círculo
//Obtener circunferencia de un círculo en scala
Double Radio;// variable que guardará el valor del radio
Double Pi =3.1416;
Double Area=0;

//Mensaje para pedir el radio
println("Ingrese el radio del círculo que desea obtener su área")
Radio=Double = scala.io.StdIn.readline.toDouble// variable que guardará el valor del radio

//Area Del circulo

println ("El Area Del Circulo Es:" )
Area=Double=Pi*(Radio * Radio)
println(Area)


//2. Desarrollar un algoritmo que diga si un número es primo o no
def Esprimo(i :Int) : Boolean = {
    if (i <= 1)
    false
    else if (i==2)
    true
    else
    !(2 to (i-1)).exists(x=> i % x==0)
}
//Se pide que ingrese el valor donde iniciara el límite inferior
println("Ingrese Un Número:")
val numero1: Int = scala.io.StdIn.readline.toInt
//Se pide que ingrese el segundo valor que será el limite superior
println("Ingrese el segundo valor:")
val numero2: Int = scala.io.StdIn.readline.toInt

(numero1 to numero2).foreach(i=> if(Esprimo2(i))println("%d Es Primo.".format(i)))

//3. Dada la variable bird = "tweet", utiliza interpolación de string para imprimir "Estoy escribiendo un tweet"
var bird = "tweet"
string conexion "Estoy Escribiendo Un Tweet"
println("Estoy Escribiendo Un %s", bird)

//4. Dada la variable mensaje = "hola luke yo soy tu padre!" utiliza slice para extraer la secuencia "luke"
var variable = "Hola Luke Soy Tu Padre!"
variable.slice(5,9)

//5. Cual es la diferencia en value y una variable en scala?
//Respuesta :value(val) se le asigna un valor definido y no puede ser cambiado, en una variable

//6. Dada la tupla (2,4,5,1,2,3,3.1416,23) regresa el número 3.1416
var x = (2,4,5,1,2,3,3.1416,23)
println(x,7)


Introducción

los siguientes 3 ejercicios en el lenguaje de programación scala es un lenguaje de programación multi-paradigma diseñado
para expresar patrones comunes de programación en forma concisa, elegante y con tipos seguros. Integra sutilmente 
características de lenguajes funcionales y orientados a objetos. La implementación actual corre en la máquina virtual de
Java y es compatible con las aplicaciones Java existentes , fueron posible desarrollarlos gracias a los conocimientos 
obtenidos en las primeras secciones de la clase de especialidad de la carrera de Ing. Tics datos masivos.


Código
//Practice 2
// 1. Crea una lista llamada "lista" con los elementos "rojo", "blanco", "negro"
// Importamos la biblioteca que nos permite hacer listas mutables
// ya que por defecto las listas son inmutables, esto quiere decir
// que no se puede modificar
import scala.collection.mutable.ListBuffer
var lista = collection.mutable.ListBuffer("rojo","blanco","negro")

// 2. Añadir 5 elementos más a "lista" "verde" ,"amarillo", "azul", "naranja", "perla"
// Ya con las lista mutable se puedes agregar uno por uno los datos que queremos tener
lista += "verde"
lista += "amarillo"
lista += "azul"
lista += "naranja"
lista += "perla"

// 3. Traer los elementos de "lista" "verde", "amarillo", "azul"
// La función (slice) nos permite tomar los datos con el uso de sus coordenadas
// que se encuentran en la lista
lista slice (3,6)

// 4. Crea un arreglo de número en rango del 1-1000 en pasos de 5 en 5
// La función (range) nos permite darle el rango que queremos que tenga nuestro arreglo
Array.range(1, 1000, 5)

// 5. Cuales son los elementos únicos de la lista Lista(1,3,3,4,6,7,3,7) utilice conversión a conjuntos
// La función (toSet) nos muestra datos no repetidos o duplicados
lista.toSet

// 6. Crea una mapa mutable llamado nombres que contenga los siguiente "Santi", 20, "Luis", 24, "Cynthia", 23, "Aileen", "27"
var mutmap = collection.mutable.Map(("Santi", 20), ("Cynthia", 24), ("Aileen", 27))

// 6 a . Imprime todas la llaves del mapa
println(mutmap)

// 7 b . Agrega el siguiente valor al mapa("Miguel", 23)
mutmap += ("Miguel" -> 23)

Código
// Práctica 3
// En este primer algoritmo se agrego una función que después de haber efectuado
// las operaciones correspondientes la función nos dará un resultado (return)
// este debe de ser un valor entero (Int)
def funcion (n: Int): Int = 
{   
// Si el número ingresado en la función es menor a 2, el número ingresado será regresado
    if (n<2)
    {
        return n
    }
// En todo caso, la función hará una serie de sumas, y regresa el resultado
    else
    {
        return funcion(n-1) + funcion(n-2)
    }
}

funcion(9)

// Segundo Algoritmo
// En este segundo algoritmo se agregó una función que después de haber efectuado
// las operaciones correspondientes la función nos dará un resultado (return)
// este debe de ser un valor entero con puntos decimales (Double)
def funcion1(n: Double): Double =
{
//Si el número ingresado en la función es menor a 2, el número ingresado será regresado
    if (n<2)
    {
        return n
    }
// En todo caso, se hará lo siguiente
    else
    {
// La fórmula matemática es más extensa, pero yo decidí hacerla en partes pequeñas
// para luego unirla en la variable (j) 
        var p = ((1+(Math.sqrt(5)))/2)
        var a = Math.pow(p,n)
        var b = Math.pow((1-p),n)
        var c = Math.sqrt(5)
        var j = ((a-(b)))/(c)
// EL resultado de (j) será el resultado al regresar (return)
        return(j)
    }

}
funcion1(9)
